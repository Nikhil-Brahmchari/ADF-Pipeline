{
	"name": "erp_to_stg_test",
	"properties": {
		"activities": [
			{
				"name": "Lookup Schema",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Pipeline RUNID",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderStoredProcedureName": "[dbo].[SP_Lookup]",
						"storedProcedureParameters": {
							"parameter": {
								"type": "String",
								"value": {
									"value": "@{formatDateTime(utcnow(),'yyyy-MM-dd h:mm tt')}",
									"type": "Expression"
								}
							}
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_Lookup",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "For each table",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Lookup Schema",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Lookup Schema').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Copy BTLive data to NTG",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [
								{
									"name": "Source",
									"value": ".dbo.@{item().SourceTableName}"
								},
								{
									"name": "Destination",
									"value": "dbo.@{item().TargetTableName}"
								}
							],
							"typeProperties": {
								"source": {
									"type": "SqlServerSource",
									"additionalColumns": [
										{
											"name": "SourceSystem",
											"value": {
												"value": "BisTrack Live",
												"type": "Expression"
											}
										}
									],
									"sqlReaderQuery": {
										"value": "@item().ExecutableQuery\n",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "SqlServerSink",
									"preCopyScript": {
										"value": "@{concat('truncate table dbo.',item().TargetTableName ,\n' WITH (PARTITIONS (3))'  )}",
										"type": "Expression"
									}
								},
								"enableStaging": false,
								"parallelCopies": 32,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "DS_BTlive",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "DS_NTG_Sink",
									"type": "DatasetReference",
									"parameters": {
										"tablename": {
											"value": "@item().TargetTableName",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "capture logs Lavers",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Copy lavers data to NTG 4in1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [
								{
									"name": "Source",
									"value": "."
								},
								{
									"name": "Destination",
									"value": "dbo.pipeline_log"
								}
							],
							"typeProperties": {
								"source": {
									"type": "SqlServerSource",
									"sqlReaderQuery": {
										"value": "SELECT '@{pipeline().DataFactory}' as DataFactory_Name,\n'@{pipeline().Pipeline}' as Pipeline_Name,\n'@{pipeline().RunId}' as RunId,\n'@{item().sourcetablename}' as Source,\n'@{item().TargetTableName}' as Destination,\n'@{pipeline().TriggerType}' as TriggerType,\n'@{pipeline().TriggerId}' as TriggerId,\n'@{pipeline().TriggerName}' as TriggerName,\n'@{pipeline().TriggerTime}' as TriggerTime,\n'@{activity('Copy lavers data to NTG 4in1').output.rowsCopied}' as rowsCopied,\n'@{activity('Copy lavers data to NTG 4in1').output.rowsRead}' as RowsRead,\n'@{activity('Copy lavers data to NTG 4in1').output.usedParallelCopies}' as No_ParallelCopies,\n'@{activity('Copy lavers data to NTG 4in1').output.copyDuration}' as copyDuration_in_secs,\n'@{activity('Copy lavers data to NTG 4in1').output.effectiveIntegrationRuntime}' as effectiveIntegrationRuntime,\n'@{activity('Copy lavers data to NTG 4in1').output.executionDetails[0].source.type}' as Source_Type,\n'@{activity('Copy lavers data to NTG 4in1').output.executionDetails[0].sink.type}' as Sink_Type,\n'@{activity('Copy lavers data to NTG 4in1').output.executionDetails[0].status}' as Execution_Status,\n'@{activity('Copy lavers data to NTG 4in1').output.executionDetails[0].start}' as CopyActivity_Start_Time,\n'@{utcnow()}' as CopyActivity_End_Time,\n'@{activity('Copy lavers data to NTG 4in1').output.executionDetails[0].detailedDurations.queuingDuration}' as CopyActivity_queuingDuration_in_secs,\n'@{activity('Copy lavers data to NTG 4in1').output.executionDetails[0].detailedDurations.timeToFirstByte}' as CopyActivity_timeToFirstByte_in_secs,\n'@{activity('Copy lavers data to NTG 4in1').output.executionDetails[0].detailedDurations.transferDuration}' as CopyActivity_transferDuration_in_secs",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "SqlServerSink"
								},
								"enableStaging": false,
								"parallelCopies": 20,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "DS_log_SQL_Source",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "DS_log_SQL_Sink",
									"type": "DatasetReference"
								}
							]
						},
						{
							"name": "If Copy from Lavers fail",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "Copy lavers data to NTG 4in1",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@equals(activity('Copy lavers data to NTG 4in1').output.executionDetails[0].status, 'Failed')",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "Break Out Lavers",
										"type": "WebActivity",
										"dependsOn": [],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"url": {
												"value": "@variables('PipelineRunId')",
												"type": "Expression"
											},
											"method": "POST",
											"body": {
												"value": "{}",
												"type": "Expression"
											},
											"authentication": {
												"type": "MSI",
												"resource": {
													"value": "https://management.azure.com",
													"type": "Expression"
												}
											}
										}
									}
								]
							}
						},
						{
							"name": "Copy lavers data to NTG 4in1",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [
								{
									"name": "Source",
									"value": ".dbo.@{item().SourceTableName}"
								},
								{
									"name": "Destination",
									"value": "dbo.@{item().TargetTableName}"
								}
							],
							"typeProperties": {
								"source": {
									"type": "SqlServerSource",
									"additionalColumns": [
										{
											"name": "SourceSystem",
											"value": {
												"value": "LAVERS",
												"type": "Expression"
											}
										}
									],
									"sqlReaderQuery": {
										"value": "@item().ExecutableQuery\n",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "SqlServerSink",
									"preCopyScript": {
										"value": "@{concat('truncate table dbo.',item().TargetTableName ,\n' WITH (PARTITIONS (4))'  )}",
										"type": "Expression"
									}
								},
								"enableStaging": false,
								"parallelCopies": 32,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "DS_LAvers_Source",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "DS_NTG_Sink",
									"type": "DatasetReference",
									"parameters": {
										"tablename": {
											"value": "@item().TargetTableName",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "Copy BT_Consolidated data to NTG",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlServerSource",
									"additionalColumns": [
										{
											"name": "SourceSystem",
											"value": {
												"value": "BisTrack Consolidated",
												"type": "Expression"
											}
										}
									],
									"sqlReaderQuery": {
										"value": "@item().ExecutableQuery\n",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "SqlServerSink",
									"preCopyScript": {
										"value": "@{concat('truncate table dbo.',item().TargetTableName ,\n' WITH (PARTITIONS (2))'  )}",
										"type": "Expression"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "DS_Bis_Track_Consolidated_Source",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "DS_NTG_Sink",
									"type": "DatasetReference",
									"parameters": {
										"tablename": {
											"value": "@item().TargetTableName",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "If Copy from BTLiveConsolidated fails",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "Copy BT_Consolidated data to NTG",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@equals(activity('Copy BT_Consolidated data to NTG').output.executionDetails[0].status, 'Failed')",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "Web1",
										"type": "WebActivity",
										"dependsOn": [],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"url": {
												"value": "@variables('PipelineRunId')",
												"type": "Expression"
											},
											"method": "POST",
											"authentication": {
												"type": "MSI",
												"resource": {
													"value": "https://management.azure.com",
													"type": "Expression"
												}
											}
										}
									}
								]
							}
						},
						{
							"name": "capture logs BT Consolidated Live",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Copy BT_Consolidated data to NTG",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [
								{
									"name": "Source",
									"value": "."
								},
								{
									"name": "Destination",
									"value": "dbo.pipeline_log"
								}
							],
							"typeProperties": {
								"source": {
									"type": "SqlServerSource",
									"sqlReaderQuery": {
										"value": "SELECT '@{pipeline().DataFactory}' as DataFactory_Name,\n'@{pipeline().Pipeline}' as Pipeline_Name,\n'@{pipeline().RunId}' as RunId,\n'@{item().sourcetablename}' as Source,\n'@{item().TargetTableName}' as Destination,\n'@{pipeline().TriggerType}' as TriggerType,\n'@{pipeline().TriggerId}' as TriggerId,\n'@{pipeline().TriggerName}' as TriggerName,\n'@{pipeline().TriggerTime}' as TriggerTime,\n'@{activity('Copy BT_Consolidated data to NTG').output.rowsCopied}' as rowsCopied,\n'@{activity('Copy BT_Consolidated data to NTG').output.rowsRead}' as RowsRead,\n'@{activity('Copy BT_Consolidated data to NTG').output.usedParallelCopies}' as No_ParallelCopies,\n'@{activity('Copy BT_Consolidated data to NTG').output.copyDuration}' as copyDuration_in_secs,\n'@{activity('Copy BT_Consolidated data to NTG').output.effectiveIntegrationRuntime}' as effectiveIntegrationRuntime,\n'@{activity('Copy BT_Consolidated data to NTG').output.executionDetails[0].source.type}' as Source_Type,\n'@{activity('Copy BT_Consolidated data to NTG').output.executionDetails[0].sink.type}' as Sink_Type,\n'@{activity('Copy BT_Consolidated data to NTG').output.executionDetails[0].status}' as Execution_Status,\n'@{activity('Copy BT_Consolidated data to NTG').output.executionDetails[0].start}' as CopyActivity_Start_Time,\n'@{utcnow()}' as CopyActivity_End_Time,\n'@{activity('Copy BT_Consolidated data to NTG').output.executionDetails[0].detailedDurations.queuingDuration}' as CopyActivity_queuingDuration_in_secs,\n'@{activity('Copy BT_Consolidated data to NTG').output.executionDetails[0].detailedDurations.timeToFirstByte}' as CopyActivity_timeToFirstByte_in_secs,\n'@{activity('Copy BT_Consolidated data to NTG').output.executionDetails[0].detailedDurations.transferDuration}' as CopyActivity_transferDuration_in_secs\n",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "SqlServerSink"
								},
								"enableStaging": false,
								"parallelCopies": 20,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "DS_log_SQL_Source",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "DS_log_SQL_Sink",
									"type": "DatasetReference"
								}
							]
						},
						{
							"name": "capture logs BTLive",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Copy BTLive data to NTG",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [
								{
									"name": "Source",
									"value": "."
								},
								{
									"name": "Destination",
									"value": "dbo.pipeline_log"
								}
							],
							"typeProperties": {
								"source": {
									"type": "SqlServerSource",
									"sqlReaderQuery": {
										"value": "SELECT '@{pipeline().DataFactory}' as DataFactory_Name,\n'@{pipeline().Pipeline}' as Pipeline_Name,\n'@{pipeline().RunId}' as RunId,\n'@{item().sourcetablename}' as Source,\n'@{item().TargetTableName}' as Destination,\n'@{pipeline().TriggerType}' as TriggerType,\n'@{pipeline().TriggerId}' as TriggerId,\n'@{pipeline().TriggerName}' as TriggerName,\n'@{pipeline().TriggerTime}' as TriggerTime,\n'@{activity('Copy BTLive data to NTG').output.rowsCopied}' as rowsCopied,\n'@{activity('Copy BTLive data to NTG').output.rowsRead}' as RowsRead,\n'@{activity('Copy BTLive data to NTG').output.usedParallelCopies}' as No_ParallelCopies,\n'@{activity('Copy BTLive data to NTG').output.copyDuration}' as copyDuration_in_secs,\n'@{activity('Copy BTLive data to NTG').output.effectiveIntegrationRuntime}' as effectiveIntegrationRuntime,\n'@{activity('Copy BTLive data to NTG').output.executionDetails[0].source.type}' as Source_Type,\n'@{activity('Copy BTLive data to NTG').output.executionDetails[0].sink.type}' as Sink_Type,\n'@{activity('Copy BTLive data to NTG').output.executionDetails[0].status}' as Execution_Status,\n'@{activity('Copy BTLive data to NTG').output.executionDetails[0].start}' as CopyActivity_Start_Time,\n'@{utcnow()}' as CopyActivity_End_Time,\n'@{activity('Copy BTLive data to NTG').output.executionDetails[0].detailedDurations.queuingDuration}' as CopyActivity_queuingDuration_in_secs,\n'@{activity('Copy BTLive data to NTG').output.executionDetails[0].detailedDurations.timeToFirstByte}' as CopyActivity_timeToFirstByte_in_secs,\n'@{activity('Copy BTLive data to NTG').output.executionDetails[0].detailedDurations.transferDuration}' as CopyActivity_transferDuration_in_secs\n",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "SqlServerSink"
								},
								"enableStaging": false,
								"parallelCopies": 20,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "DS_log_SQL_Source",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "DS_log_SQL_Sink",
									"type": "DatasetReference"
								}
							]
						},
						{
							"name": "If Copy from BTLive fails",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "Copy BTLive data to NTG",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@equals(activity('Copy BTLive data to NTG').output.executionDetails[0].status, 'Failed')",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "Break Out_Bis_Track_Live",
										"type": "WebActivity",
										"dependsOn": [],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"url": {
												"value": "@variables('PipelineRunId')",
												"type": "Expression"
											},
											"method": "POST",
											"body": {
												"value": "{}",
												"type": "Expression"
											},
											"authentication": {
												"type": "MSI",
												"resource": {
													"value": "https://management.azure.com",
													"type": "Expression"
												}
											}
										}
									}
								]
							}
						}
					]
				}
			},
			{
				"name": "Pipeline RUNID",
				"type": "SetVariable",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": "PipelineRunId",
					"value": {
						"value": "@concat('https://management.azure.com/subscriptions/8396ad04-1361-4073-99c7-941249e2412f/resourceGroups/ntg-mid-paas-dev/providers/Microsoft.DataFactory/factories/',pipeline().DataFactory,'/pipelineruns/',pipeline().RunId,'/cancel?api-version=2018-06-01')",
						"type": "Expression"
					}
				}
			}
		],
		"variables": {
			"PipelineRunId": {
				"type": "String"
			}
		},
		"folder": {
			"name": "eCommerce_Pipelines"
		},
		"annotations": [],
		"lastPublishTime": "2021-04-01T06:53:10Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}